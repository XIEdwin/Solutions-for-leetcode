解题思路:
双层for循环，暴力遍历，时间复杂度为O(n2)，可以使用一个hash表，一次遍历即可
java版本
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<nums.length;i++){
            int tmp=target-nums[i];
            if(map.containsKey(tmp)){
                return new int[]{i,map.get(tmp)};
            }else{
                map.put(nums[i],i);
            }
        }
        return null;
    }
}
python版本
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dic={}
        for i,j in enumerate(nums):
            tmp=target-j
            if tmp in dic:
                return [i,dic.get(tmp)]
            else:
                dic[j]=i
